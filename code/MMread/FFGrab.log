This is pdfTeX, Version 3.14159265-2.6-1.40.17 (TeX Live 2016) (preloaded format=mex 2016.5.22)  6 FEB 2018 13:00
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**FFGrab.cpp MexDDGrab.cpp
(./FFGrab.cpp
This is MeX  Version 1.05  18 XII 1993  (B. Jackowski & M. Ry\'cko)

Overfull \hbox (4.20439pt too wide) in paragraph at lines 1--4
[]\tenrm /*************************************************** This is the main 
Grab-ber code. It uses AVbin|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\tenrm *
.\tenrm *
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.17 #
      ifdef MATLAB_MEX_FILE
? r
OK, entering \nonstopmode...
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.17 #ifdef MATLAB_
                   MEX_FILE
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in math mode.
l.18 #
      include "mex.h"
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.19 #
      define FFprintf(...) mexPrintf(__VA_ARGS__)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing { inserted.
<to be read again> 
                   _
l.19 #define FFprintf(...) mexPrintf(__
                                       VA_ARGS__)
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing { inserted.
<to be read again> 
                   _
l.19 #define FFprintf(...) mexPrintf(__VA_ARGS__
                                                )
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! You can't use `macro parameter character #' in math mode.
l.20 #
      else
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.21 #
      define FFprintf(...) printf(__VA_ARGS__)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing { inserted.
<to be read again> 
                   _
l.21 #define FFprintf(...) printf(__
                                    VA_ARGS__)
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Missing { inserted.
<to be read again> 
                   _
l.21 #define FFprintf(...) printf(__VA_ARGS__
                                             )
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! You can't use `macro parameter character #' in math mode.
l.22 #
      endif
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.23 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.23 
     
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.23 
     
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.23 
     
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.23 
     
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (77.29019pt too wide) in paragraph at lines 17--23
[]\tenrm ifdef MATLAB$[]\teni EX[]ILEinclude\tenrm "\teni mex:h\tenrm "\teni de
fineFFprintf\tenrm (\teni :::\tenrm )\teni mexPrintf\tenrm ([]$ |

\hbox(7.5+9.56113)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\tenrm d
.\tenrm e
.etc.

! You can't use `macro parameter character #' in horizontal mode.
l.24 //#
        ifndef mwSize
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.25 //#
        define mwSize int
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.26 //#
        endif
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.28 #
      define DEBUG 0
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.31 	#
       include <avbin.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.32 	#
       include <libavformat/avformat.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.34 	struct _
              AVbinFile {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.38 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.39 	struct _
              AVbinStream {
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.45 }
      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.46 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (82.8952pt too wide) in paragraph at lines 39--46
[]\tenrm struct $[]\teni VbinStream[]\tenrm ;$ |

\hbox(6.94444+1.94444)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm t
.\tenrm r
.\tenrm u
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.47 #
      include <stdlib.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.48 #
      include <string.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.49 #
      include <vector>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.50 #
      include <map>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.53 #
      include <sys/types.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.54 #
      include <sys/stat.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.55 #
      include <unistd.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.63 ...VbinStreamInfo info, AVbinTimestamp start_
                                                  time)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.78 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (1165.87294pt too wide) in paragraph at lines 60--78
\tenrm te-sPer-WORD, AVbin-Stre-amInfo info, AVbin-Ti-me-stamp start$[]\teni im
e\tenrm )[];$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm t
.\tenrm e
.\discretionary
..\tenrm -
.\tenrm s
.\tenrm P
.etc.

! Undefined control sequence.
l.82 ... (DEBUG) FFprintf("freeing frame data...\n
                                                  ");
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.83 		for (vector<uint8_
                         t*>::iterator i=frames.begin();i != frames.end(); i...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.84 	}
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.85 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.88 	AVbinTimestamp start_
                           time;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.89 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.90 	vector<uint8_
                   t*> frames;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.93 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.115 ...ble timestamp = (packet->timestamp-start_
                                                  time)/1000.0/1000.0;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.117 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (62.38501pt too wide) in paragraph at lines 118--130
\tenrm max(0,((int)((startTime-timestamp)*rate))*bytesPerWORD); len = ((int)((s
topTime-timestamp)*rate))*bytesPerWORD;|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm m
.\tenrm a
.\tenrm x
.\tenrm (
.\tenrm 0
.etc.

! Misplaced alignment tab character &.
l.145 			if (trySeeking &
                         & (len<=0 || done)) return 0;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.145 			if (trySeeking &&
                           (len<=0 || done)) return 0;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.147 			uint8_
               t audiobuf[1024*1024];
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Undefined control sequence.
l.152 			if (DEBUG) FFprintf("avbin_decode_audio\n
                                                  ");
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced alignment tab character &.
l.153 ... packet->data, packet->size, audiodata, &
                                                  uint8_tsout)) > 0)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.161 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (57.14026pt too wide) in paragraph at lines 147--161
[]\tenrm uint8$[]\teni audiobuf\tenrm [1024 \tensy ^^C \tenrm 1024]; \teni intu
int\tenrm 8[]\teni sleft \tenrm = \teni sizeof\tenrm (\teni audiobuf\tenrm ); \
teni intuint\tenrm 8[]\teni sout \tenrm = \teni uint\tenrm 8[]\teni sleft\tenrm
 ; \teni intuint\tenrm 8[]\teni sread\tenrm ; \teni uint\tenrm 8[] \tensy ^^C|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm u
.\tenrm i
.\tenrm n
.\kern-0.27779
.etc.


Overfull \hbox (94.41632pt too wide) in paragraph at lines 147--161
\teni audiodata \tenrm = \teni audiobuf\tenrm ; \teni if\tenrm (\teni DEBUG\ten
rm )\teni FFprintf\tenrm ("\teni avbin[]ecode[]udio\tenrm "); \teni while\tenrm
 ((\teni uint\tenrm 8[]\teni sread \tenrm = \teni avbin[]ecode[]udio\tenrm (\te
ni stream; packet\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni a
.\teni u
.\teni d
.\teni i
.\teni o
.etc.


Overfull \hbox (390.2447pt too wide) in paragraph at lines 147--161
\teni data; packet\tensy ^^@ \teni > size; audiodata; uint\tenrm 8[]\teni sout\
tenrm )) \teni > \tenrm 0)[]$ |

\hbox(7.5+2.5)x469.75499
.\teni d
.\teni a
.\teni t
.\teni a
.\teni ;
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.166 			uint8_
               t* tmp = (uint8_t*)malloc(len);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.168 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.171 			frames.push_
                     back(tmp);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.174 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.195 			if ((trySeeking &
                          & skip && packetNr < startDecodingAt && packetNr !...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.195 			if ((trySeeking &&
                            skip && packetNr < startDecodingAt && packetNr !...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.195 			if ((trySeeking && skip &
                                  & packetNr < startDecodingAt && packetNr !...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.195 			if ((trySeeking && skip &&
                                    packetNr < startDecodingAt && packetNr !...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.195 ...g && skip && packetNr < startDecodingAt &
                                                  & packetNr != 1) || done )...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.195 ... && skip && packetNr < startDecodingAt &&
                                                   packetNr != 1) || done ) ...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.198 			uint8_
               t* videobuf = (uint8_t*)malloc(bytesPerWORD);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Undefined control sequence.
l.200 			if (DEBUG) FFprintf("avbin_decode_video\n
                                                  ");
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.201 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (251.187pt too wide) in paragraph at lines 197--201
[]\tenrm if (DE-BUG) FFprintf("allocate frame uint8$[] \tensy ^^C \teni videobu
f \tenrm = (\teni uint\tenrm 8[]\tensy ^^C\tenrm )\teni malloc\tenrm (\teni byt
esPerWORD\tenrm ); \teni if\tenrm (!\teni videobuf\tenrm )\teni return\tenrm 2;
 \teni if\tenrm (\teni DEBUG\tenrm )\teni FFprintf\tenrm ("\teni avbin[]ecode[]
ideo\tenrm ");$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.202 			if (avbin_
                   decode_video(stream, packet->data, packet->size,videobuf)...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Undefined control sequence.
l.204 ... FFprintf("avbin_decode_video FAILED!!!\n
                                                  ");
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.210 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (455.08554pt too wide) in paragraph at lines 202--210
[]\tenrm if (avbin$[]\teni ecode[]ideo\tenrm (\teni stream; packet\tensy ^^@ \t
eni > data; packet\tensy ^^@ \teni > size; videobuf\tenrm ) \teni <\tenrm = 0)[
]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.211 			if (stream->frame->key_
                                frame)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.215 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.221 			frames.push_
                     back(videobuf);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.224 		}
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.225 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (267.04648pt too wide) in paragraph at lines 216--225
[]\tenrm if (skip || len==0)  free(videobuf); re-turn 0;  frames.push$[]\teni a
ck\tenrm (\teni videobuf\tenrm ); \teni frameBytes:push[]ack\tenrm (\teni min\t
enrm (\teni len; bytesPerWORD\tenrm )); \teni frameTimes:push[]ack\tenrm (\teni
 timestamp\tenrm );$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

[1]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.244 ...gned int id, unsigned int frameNr, uint8_
                                                  t** data, unsigned int* nr...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.252 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (217.90578pt too wide) in paragraph at lines 240--252
\tenrm int fra-meNr, uint8$[] \tensy ^^C ^^C\teni data; unsignedint \tensy ^^C 
\teni nrBytes; double \tensy ^^C \teni time\tenrm ); \teni ==datamustbefreedbyc
allerintgetAudioFrame\tenrm (\teni unsignedintid; unsignedintframeNr; uint\tenr
m 8[] \tensy ^^C|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm i
.\tenrm n
.\kern-0.27779
.\tenrm t
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.


Overfull \hbox (706.13036pt too wide) in paragraph at lines 240--252
\tensy ^^C\teni data; unsignedint \tensy ^^C \teni nrBytes; double \tensy ^^C \
teni time\tenrm ); \teni voidsetFrames\tenrm (\teni unsignedint \tensy ^^C \ten
i frameNrs; intnrFrames\tenrm ); \teni voidsetTime\tenrm (\teni doublestartTime
; doublestopTime\tenrm ); \teni voiddisableVideo\tenrm (); \teni voiddisableAud
io\tenrm (); \teni voidcleanUp\tenrm (); \teni ==mustbecalledattheend; inordert
orenderanythingafterward:$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tensy ^^C
.\teni d
.\teni a
.\teni t
.\teni a
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.253 #
       ifdef MATLAB_MEX_FILE
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.253 #ifdef MATLAB_
                    MEX_FILE
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in math mode.
l.257 #
       endif
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.262 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (87.74338pt too wide) in paragraph at lines 253--262
[]\tenrm ifdef MATLAB$[]\teni EX[]ILEvoidsetMatlabCommand\tenrm (\teni char \te
nsy ^^C \teni matlabCommand\tenrm ); \teni voidsetMatlabCommandHandle\tenrm (\t
eni mxArray \tensy ^^C|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\tenrm d
.\tenrm e
.etc.


Overfull \hbox (20.19427pt too wide) in paragraph at lines 253--262
\teni matlabCommandHandle\tenrm ); \teni voidrunMatlabCommand\tenrm (\teni Grab
ber \tensy ^^C \teni G\tenrm ); \teni endifprivate \tenrm : \teni streammapstre
ams\tenrm ; \teni vector <|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni m
.\teni a
.\teni t
.\teni l
.\kern0.19678
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.275 #
       ifdef MATLAB_MEX_FILE
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.275 #ifdef MATLAB_
                    MEX_FILE
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in math mode.
l.279 #
       endif
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Extra }, or forgotten $.
l.280 }
       ;
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.281 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.290 	if (DEBUG) FFprintf("avbin_
                                  init\n");
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Undefined control sequence.
l.290 	if (DEBUG) FFprintf("avbin_init\n
                                        ");
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.291 ...()) FFprintf("avbin_init init failed!!!\n
                                                  ");
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.292 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.293 	av_
          log_set_level(AV_LOG_QUIET);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.294 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.295 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.302 		avbin_
              close_stream(i->second->stream);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.304 	}
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.305 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (7.25888pt too wide) in paragraph at lines 300--305
[]\tenrm for (stre-am-map::iterator i = stre-ams.begin(); i != stre-ams.end(); 
i++)  avbin$[]\teni lose[]tream\tenrm (\teni i\tensy ^^@ \teni > second\tensy ^
^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm f
.\tenrm o
.\tenrm r
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.310  	avbin_
              close_file(file);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.312 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in vertical mode.
l.313 #
       ifdef MATLAB_MEX_FILE
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.313 #ifdef MATLAB_
                    MEX_FILE
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in math mode.
l.316 #
       endif
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Extra }, or forgotten $.
l.317 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.318 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (21.75623pt too wide) in paragraph at lines 313--318
[]\tenrm ifdef MATLAB$[]\teni EX[]ILEif\tenrm (\teni matlabCommand\tenrm )\teni
 free\tenrm (\teni matlabCommand\tenrm ); \teni matlabCommand \tenrm = \teni NU
LL\tenrm ; \teni endif$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\tenrm d
.\tenrm e
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.355 	*rate = CB->info.audio.sample_
                                     rate;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.360 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (104.74338pt too wide) in paragraph at lines 354--360
[]\tenrm *nrChannels = CB->info.audio.channels; *rate = CB->info.audio.sample$[
]\teni ate\tenrm ; \tensy ^^C\teni bits \tenrm = \teni CB\tensy ^^@ \teni > inf
o:audio:sample[]its\tenrm ; \tensy ^^C\teni subtype \tenrm =|

\hbox(7.5+1.94444)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm *
.\tenrm n
.\tenrm r
.\tenrm C
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.375 ...gned int id, unsigned int frameNr, uint8_
                                                  t** data, unsigned int* nr...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.378 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.378 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

[2]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.387 	uint8_
             t* tmp = CB->frames[frameNr];
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.389 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.400 ...gned int id, unsigned int frameNr, uint8_
                                                  t** data, unsigned int* nr...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.403 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.403 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.410 	uint8_
             t* tmp = CB->frames[frameNr];
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.412 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.429 ...=0; i<nrFrames; i++) this->frameNrs.push_
                                                  back(frameNrs[i]);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.430 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.440 				CB->frameNrs.push_
                            back(frameNrs[i]);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.442 			}
          
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.445 		}
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.446 	}
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.447 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (41.64542pt too wide) in paragraph at lines 431--447
[]\tenrm for (int j=0; j < vi-deos.size(); j++)  Grab-ber* CB = vi-deos.at(j); 
if (CB)  CB->frames.clear(); CB->frameNrs.clear();|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm f
.\tenrm o
.\tenrm r
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.


Overfull \hbox (85.63405pt too wide) in paragraph at lines 431--447
\tenrm for (int i=0; i<nrFrames; i++)  CB->frameNrs.push$[]\teni ack\tenrm (\te
ni frameNrs\tenrm [\teni i\tenrm ]); \teni minFrame \tenrm = \teni frameNrs\ten
rm [\teni i\tenrm ] \teni < minFrame\tenrm ?\teni frameNrs\tenrm [\teni i\tenrm
 ] :|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm f
.\tenrm o
.\tenrm r
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Misplaced alignment tab character &.
l.448 	if (tryseeking &
                       & nrFrames > 0)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.448 	if (tryseeking &&
                         nrFrames > 0)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.451 		for (map<unsigned int,double>::const_
                                             iterator it=keyframes.begin();i...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.453 			if (it->first <= minFrame &
                                    & it->first > startDecodingAt) startDeco...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.453 			if (it->first <= minFrame &&
                                      it->first > startDecodingAt) startDeco...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.456 	}
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.457 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (281.00124pt too wide) in paragraph at lines 448--457
\teni keyframes:begin\tenrm (); \teni it\tenrm ! = \teni keyframes:end\tenrm ()
; \teni it \tenrm + +)[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni k
.\kern0.3148
.\teni e
.\teni y
.\kern0.35878
.etc.


Overfull \hbox (18.39864pt too wide) in paragraph at lines 463--468
[]\tenrm void FFGrab-ber::setTime(double start-Time, do-uble stop-Time)  this->
startTime = start-Time; this->stopTime|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm v
.\kern-0.27779
.\tenrm o
.\tenrm i
.etc.


Overfull \hbox (40.53427pt too wide) in paragraph at lines 469--482
[]\tenrm for (int i=0; i < vi-deos.size(); i++)  Grab-ber* CB = vi-deos.at(i); 
if (CB)  CB->frames.clear(); CB->frameNrs.clear();|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm f
.\tenrm o
.\tenrm r
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.


Overfull \hbox (42.20096pt too wide) in paragraph at lines 483--495
[]\tenrm for (int i=0; i < au-dios.size(); i++)  Grab-ber* CB = au-dios.at(i); 
if (CB)  CB->frames.clear(); CB->frameNrs.clear();|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm f
.\tenrm o
.\tenrm r
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.496 #
       ifdef MATLAB_MEX_FILE
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.496 #ifdef MATLAB_
                    MEX_FILE
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.504 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (666.5228pt too wide) in paragraph at lines 496--504
[]\tenrm ifdef MATLAB$[]\teni EX[]ILEvoidFFGrabber \tenrm :: \teni setMatlabCom
mand\tenrm (\teni char \tensy ^^C \teni matlabCommand\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\tenrm d
.\tenrm e
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.508 ...!mxIsClass(matlabCommandHandle,"function_
                                                  handle")) mexErrMsgTxt("bl...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.513 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.514 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (123.8714pt too wide) in paragraph at lines 505--514
[]\tenrm void FFGrab-ber::setMatlabCommandHandle(mxArray* ma-tlab-Com-man-dHan-
dle)  mxDestroyArray(this->matlabCommandHandle);|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm v
.\kern-0.27779
.\tenrm o
.\tenrm i
.etc.


Overfull \hbox (59.62416pt too wide) in paragraph at lines 505--514
\tenrm if (!mxIsClass(matlabCommandHandle,"function$[]\teni andle\tenrm "))\ten
i mexErrMsgTxt\tenrm ("\teni blah\tenrm "); \teni this\tensy ^^@ \teni > matlab
CommandHandle \tenrm =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.\tenrm !
.etc.


Overfull \hbox (84.56833pt too wide) in paragraph at lines 505--514
\teni matlabCommandHandle\tenrm ; \teni mexMakeArrayPersistent\tenrm (\teni mat
labCommandHandle\tenrm ); \teni deletematlabCommand\tenrm ; \teni matlabCommand
 \tenrm =|

\hbox(7.5+2.5)x469.75499
.\teni m
.\teni a
.\teni t
.\teni l
.\kern0.19678
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.528 		vector<uint8_
                     t*>::iterator lastframe = --(G->frames.end());
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.529 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.537 ... = mxCreateNumericArray(2, dims, mxUINT8_
                                                  CLASS, mxREAL); // empty 2...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.547 		}
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.550 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (131.26772pt too wide) in paragraph at lines 534--550
\tenrm ray(2, dims, mxUINT8$[]\teni LASS; mxREAL\tenrm ); \teni ==empty\tenrm 2
\teni dmatrixprhs\tenrm [1] = \teni mxCreateDoubleMatrix\tenrm (1\teni ; \tenrm
 1\teni ; mxREAL\tenrm ); \teni mxGetPr\tenrm (\teni prhs\tenrm [1])[0] =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm r
.\tenrm a
.\kern-0.27779
.\tenrm y
.\tenrm (
.etc.


Overfull \hbox (199.9483pt too wide) in paragraph at lines 534--550
\teni width\tenrm ; \teni prhs\tenrm [2] = \teni mxCreateDoubleMatrix\tenrm (1\
teni ; \tenrm 1\teni ; mxREAL\tenrm ); \teni mxGetPr\tenrm (\teni prhs\tenrm [2
])[0] = \teni height\tenrm ; \teni prhs\tenrm [3] = \teni mxCreateDoubleMatrix\
tenrm (1\teni ; \tenrm 1\teni ; mxREAL\tenrm ); \teni prhs\tenrm [4] =|

\hbox(7.5+2.5)x469.75499
.\teni w
.\kern0.26909
.\teni i
.\teni d
.\teni t
.etc.


Overfull \hbox (639.1544pt too wide) in paragraph at lines 534--550
\teni mxCreateDoubleMatrix\tenrm (1\teni ; \tenrm 1\teni ; mxREAL\tenrm ); \ten
i mexMakeArrayPersistent\tenrm (\teni prhs\tenrm [0]); \teni mexMakeArrayPersis
tent\tenrm (\teni prhs\tenrm [1]); \teni mexMakeArrayPersistent\tenrm (\teni pr
hs\tenrm [2]); \teni mexMakeArrayPersistent\tenrm (\teni prhs\tenrm [3]); \teni
 mexMakeArrayPersistent\tenrm (\teni prhs\tenrm [4]); \teni mxGetPr\tenrm (\ten
i prhs\tenrm [3])[0] =|

\hbox(7.5+2.5)x469.75499
.\teni m
.\teni x
.\teni C
.\kern0.71527
.\teni r
.etc.

! You can't use `macro parameter character #' in horizontal mode.
l.567 #
       endif
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.571 	if (DEBUG) FFprintf("avbin_
                                  open_filename\n");
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Undefined control sequence.
l.571 	if (DEBUG) FFprintf("avbin_open_filename\n
                                                 ");
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced alignment tab character &.
l.572  	if (format &
                    & strlen(format) > 0) file = avbin_open_filename_with_fo...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.572  	if (format &&
                      strlen(format) > 0) file = avbin_open_filename_with_fo...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.575 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (203.19292pt too wide) in paragraph at lines 569--575
\tenrm eking)  if (DE-BUG) FFprintf("avbin$[]\teni pen[]ilename\tenrm "); \teni
 if\tenrm (\teni formatstrlen\tenrm (\teni format\tenrm ) \teni > \tenrm 0)\ten
i file \tenrm = \teni avbin[]pen[]ilename[]ith[]ormat\tenrm (\teni filename; fo
rmat\tenrm ); \teni elsefile \tenrm =|

\hbox(7.5+2.86108)x469.75499, glue set - 1.0
.\tenrm e
.\tenrm k
.\tenrm i
.\tenrm n
.\tenrm g
.etc.

[3]
! Misplaced alignment tab character &.
l.578 	stat(filename,&
                      fstat);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.580 ...is->filename,filename)!=0 || filestat.st_
                                                  mtime != fstat.st_mtime)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.584 		memcpy(&
                filestat,&fstat,sizeof(fstat));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.584 		memcpy(&filestat,&
                          fstat,sizeof(fstat));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.585 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.585 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (440.97498pt too wide) in paragraph at lines 580--585
[]\tenrm if (!this->filename || strcmp(this->filename,filename)!=0 || filestat.
st$[]\teni time\tenrm ! = \teni fstat:st[]time\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.590 	fileinfo.structure_
                          size = sizeof(fileinfo);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.591 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.592 	if (DEBUG) FFprintf("avbin_
                                  file_info\n");
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Undefined control sequence.
l.592 	if (DEBUG) FFprintf("avbin_file_info\n
                                             ");
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced alignment tab character &.
l.593 	if (avbin_file_info(file, &
                                  fileinfo)) return -1;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.594 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.596 	if (fileinfo.start_
                          time <-1000) fileinfo.start_time = 0;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.598 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.599 	for (int stream_
                       index=0; stream_index<fileinfo.n_streams; stream_inde...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.603 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.603 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (253.31032pt too wide) in paragraph at lines 599--603
[]\tenrm for (int stream$[]\teni ndex \tenrm = 0; \teni stream[]ndex < fileinfo
:n[]treams\tenrm ; \teni stream[]ndex \tenrm + +)[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm f
.\tenrm o
.\tenrm r
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.604 		if (DEBUG) FFprintf("avbin_
                                   stream_info\n");
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Undefined control sequence.
l.604 		if (DEBUG) FFprintf("avbin_stream_info\n
                                                ");
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced alignment tab character &.
l.605 		avbin_stream_info(file, stream_index, &
                                               streaminfo);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.606 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.609 		if (avbin_
                  get_version() < 8)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.615 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (508.55357pt too wide) in paragraph at lines 609--615
[]\tenrm if (avbin$[]\teni et[]ersion\tenrm () \teni < \tenrm 8)[]$ |

\hbox(7.5+2.86108)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.618 		if (streaminfo.type == AVBIN_
                                     STREAM_TYPE_VIDEO && !disableVideo)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.618 ...eaminfo.type == AVBIN_STREAM_TYPE_VIDEO &
                                                  & !disableVideo)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.618 ...aminfo.type == AVBIN_STREAM_TYPE_VIDEO &&
                                                   !disableVideo)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.624 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.624 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.624 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (574.35124pt too wide) in paragraph at lines 618--624
[]\tenrm if (stre-aminfo.type == AVBIN$[]\teni TREAM[]YPE[]IDEO\tenrm !\teni di
sableVideo\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.626 				streams[stream_
                         index]=new Grabber(false,tmp,tryseeking,rate,stream...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.628 			}
           else {
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Undefined control sequence.
l.629 				FFprintf("Could not open video stream\n
                                                 ");
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra }, or forgotten $.
l.631 		}
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.632 ...eaminfo.type == AVBIN_STREAM_TYPE_AUDIO &
                                                  & !disableAudio)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.632 ...aminfo.type == AVBIN_STREAM_TYPE_AUDIO &&
                                                   !disableAudio)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.641 				FFprintf("Could not open audio stream\n
                                                 ");
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra }, or forgotten $.
l.644 	}
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.647 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (153.71602pt too wide) in paragraph at lines 625--647
[]\tenrm if (DE-BUG) FFprintf("Inserting vi-deo stream streams[stream$[]\teni n
dex\tenrm ] = \teni newGrabber\tenrm (\teni false; tmp; tryseeking; rate; strea
minfo:video:height \tensy ^^C|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.


Overfull \hbox (285.11728pt too wide) in paragraph at lines 625--647
\teni streaminfo:video:width \tensy ^^C \tenrm 3\teni ; streaminfo; fileinfo:st
art[]ime\tenrm ); \teni videos:push[]ack\tenrm (\teni streams\tenrm [\teni stre
am[]ndex\tenrm ]); \teni else[]if\tenrm (\teni streaminfo:type \tenrm ==|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni s
.\teni t
.\teni r
.\kern0.27779
.\teni e
.etc.


Overfull \hbox (1492.2034pt too wide) in paragraph at lines 625--647
\teni AVBIN[]TREAM[]YPE[]UDIO\tenrm !\teni disableAudio\tenrm )[]\teni this\ten
sy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni A
.\teni V
.\kern2.22223
.\teni B
.\kern0.50172
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.656 	packet.structure_
                        size = sizeof(packet);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.659 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.661 	while (!avbin_
                     read(file, &packet))
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.661 	while (!avbin_read(file, &
                                 packet))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.666 			G->Grab(&
                  packet);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.667 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.667 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.667 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (297.78983pt too wide) in paragraph at lines 660--667
[]\tenrm bool al-l-Done = false; while (!avbin$[]\teni ead\tenrm (\teni file; p
acket\tenrm ))[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm b
.\kern0.27779
.\tenrm o
.\kern0.27779
.etc.

! Misplaced alignment tab character &.
l.671 ...i = streams.begin(); i != streams.end() &
                                                  & allDone; i++)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.671 ... = streams.begin(); i != streams.end() &&
                                                   allDone; i++)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.673 					allDone = allDone &
                              & i->second->done;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.673 					allDone = allDone &&
                                i->second->done;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! You can't use `macro parameter character #' in vertical mode.
l.677 #
       ifdef MATLAB_MEX_FILE
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.677 #ifdef MATLAB_
                    MEX_FILE
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in math mode.
l.679 #
       endif
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Extra }, or forgotten $.
l.680 		}
          else
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.682 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (92.14165pt too wide) in paragraph at lines 677--682
[]\tenrm ifdef MATLAB$[]\teni EX[]ILEif\tenrm (!\teni G\tensy ^^@ \teni > isAud
io\tenrm )\teni runMatlabCommand\tenrm (\teni G\tenrm ); \teni endifelseif\tenr
m (\teni DEBUG\tenrm )\teni FFprintf\tenrm ("\teni Unknownpacket$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\tenrm d
.\tenrm e
.etc.

! Misplaced alignment tab character &.
l.683 		if (tryseeking &
                        & needseek)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.683 		if (tryseeking &&
                          needseek)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.685 			if (stopTime &
                       & startTime > 0) {
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.685 			if (stopTime &&
                         startTime > 0) {
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.687 				av_
             seek_frame(file->context, -1, (AVbinTimestamp)(startTime*1000*1...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.688 			}
          
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.690 		}
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.691 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (39.47359pt too wide) in paragraph at lines 683--691
[]\tenrm if (try-se-eking  ne-ed-seek)  if (stop-Time  start-Time > 0)  if (DE-
BUG) FFprintf("try se-eking to av$[]\teni eek[]rame\tenrm (\teni file\tensy ^^@
 \teni >|

\hbox(7.5+2.86108)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Undefined control sequence.
l.694 			if (DEBUG) FFprintf("stopForced\n
                                          ");
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! You can't use `macro parameter character #' in vertical mode.
l.700 #
       ifdef MATLAB_MEX_FILE
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.700 #ifdef MATLAB_
                    MEX_FILE
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in math mode.
l.710 #
       endif
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.711 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (554.66934pt too wide) in paragraph at lines 700--711
[]\tenrm ifdef MATLAB$[]\teni EX[]ILEif\tenrm (\teni prhs\tenrm [0])[]\teni prh
s\tenrm [0] =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\tenrm d
.\tenrm e
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.715 #
       ifdef MATLAB_MEX_FILE
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.715 #ifdef MATLAB_
                    MEX_FILE
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.717 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (12.41263pt too wide) in paragraph at lines 757--760
[]\tenrm char* er-rmsg = mes-sage(FFG.build(filename, for-mat, mxGet-Sca-lar(pr
hs[3]), mxGet-Sca-lar(prhs[4]), mxGet-|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm c
.\kern-0.27779
.\tenrm h
.\tenrm a
.etc.


Overfull \hbox (17.6765pt too wide) in paragraph at lines 761--769
\tenrm rMsg-Txt("doCapture: there are no out-puts"); char* er-rmsg = mes-sage(F
FG.doCapture()); if (strcmp("",errmsg))|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm r
.\tenrm M
.\tenrm s
.\tenrm g
.\discretionary
..\tenrm -
.etc.

[4]
! Misplaced alignment tab character &.
l.773 ... errmsg =  message(FFG.getVideoInfo(id, &
                                                  width, &height,&rate, &nrF...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.773 ...=  message(FFG.getVideoInfo(id, &width, &
                                                  height,&rate, &nrFramesCap...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.773 ...ge(FFG.getVideoInfo(id, &width, &height,&
                                                  rate, &nrFramesCaptured, &...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.773 ...getVideoInfo(id, &width, &height,&rate, &
                                                  nrFramesCaptured, &nrFrame...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.773 ...idth, &height,&rate, &nrFramesCaptured, &
                                                  nrFramesTotal, &totalDurat...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.773 ...ate, &nrFramesCaptured, &nrFramesTotal, &
                                                  totalDuration));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


Overfull \hbox (7.73207pt too wide) in paragraph at lines 770--774
[]\tenrm unsigned int id = (unsi-gned int)mxGetScalar(prhs[1]); int width,heigh
t,nrFramesCaptured,nrFramesTotal;|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm u
.\tenrm n
.\tenrm s
.\tenrm i
.etc.

! Misplaced alignment tab character &.
l.790 ... errmsg =  message(FFG.getAudioInfo(id, &
                                                  nrChannels, &rate, &bits, ...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.790 ...ssage(FFG.getAudioInfo(id, &nrChannels, &
                                                  rate, &bits, &nrFramesCapt...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.790 ...FG.getAudioInfo(id, &nrChannels, &rate, &
                                                  bits, &nrFramesCaptured, &...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.790 ...udioInfo(id, &nrChannels, &rate, &bits, &
                                                  nrFramesCaptured, &nrFrame...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.790 ...nnels, &rate, &bits, &nrFramesCaptured, &
                                                  nrFramesTotal, &subtype, &...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.790 ...its, &nrFramesCaptured, &nrFramesTotal, &
                                                  subtype, &totalDuration));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.790 ...amesCaptured, &nrFramesTotal, &subtype, &
                                                  totalDuration));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


Overfull \hbox (58.48218pt too wide) in paragraph at lines 787--791
[]\tenrm unsigned int id = (unsi-gned int)mxGetScalar(prhs[1]); int nrChan-nels
,bits,nrFramesCaptured,nrFramesTotal,subtype;|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm u
.\tenrm n
.\tenrm s
.\tenrm i
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.799 ...L); mxGetPr(plhs[5])[0] = subtype==AVBIN_
                                                  SAMPLE_FORMAT_FLOAT?1:0; }
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.799 ...subtype==AVBIN_SAMPLE_FORMAT_FLOAT?1:0; }
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.801 	}
         else if (!strcmp("getCaptureInfo",cmd)) {
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.803 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.803 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (619.27225pt too wide) in paragraph at lines 794--803
\tenrm 0; \teni if\tenrm (\teni nlhs >\tenrm = 7)[]\teni elseif\tenrm (!\teni s
trcmp\tenrm ("\teni getCaptureInfo\tenrm "\teni ; cmd\tenrm ))[]$ |

\hbox(7.5+2.5)x469.75499
.\tenrm 0
.\tenrm ;
.\glue(\thinmuskip) 1.66663
.\teni i
.\teni f
.etc.

! Misplaced alignment tab character &.
l.805 		FFG.getCaptureInfo(&
                            nrVideo, &nrAudio);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.805 		FFG.getCaptureInfo(&nrVideo, &
                                      nrAudio);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.815 		uint8_
              t* data;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.820 ... message(FFG.getVideoFrame(id, frameNr, &
                                                  data, &nrBytes, &time));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.820 ...e(FFG.getVideoFrame(id, frameNr, &data, &
                                                  nrBytes, &time));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.820 ...ideoFrame(id, frameNr, &data, &nrBytes, &
                                                  time));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.821 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (44.77382pt too wide) in paragraph at lines 813--821
[]\tenrm unsigned int id = (unsi-gned int)mxGetScalar(prhs[1]); unsi-gned int f
ra-meNr = (unsi-gned int)mxGetScalar(prhs[2]);|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm u
.\tenrm n
.\tenrm s
.\tenrm i
.etc.


Overfull \hbox (233.07181pt too wide) in paragraph at lines 813--821
\tenrm uint8$[] \tensy ^^C \teni data\tenrm ; \teni unsignedintnrBytes\tenrm ; 
\teni doubletime\tenrm ; \teni mwSizedims\tenrm [2]; \teni dims\tenrm [1] = 1; 
\teni char \tensy ^^C \teni errmsg \tenrm = \teni message\tenrm (\teni FFG:getV
ideoFrame\tenrm (\teni id; frameNr; data; nrBytes; time\tenrm ));$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm u
.\tenrm i
.\tenrm n
.\kern-0.27779
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.825 ... = mxCreateNumericArray(2, dims, mxUINT8_
                                                  CLASS, mxREAL); // empty 2...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.829 	}
         else if (!strcmp("getAudioFrame",cmd)) {
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.832 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.832 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (330.01099pt too wide) in paragraph at lines 824--832
[]\tenrm dims[0] = nrBy-tes; plhs[0] = mxCre-ate-Nu-me-ri-cAr-ray(2, dims, mxUI
NT8$[]\teni LASS; mxREAL\tenrm ); \teni ==empty\tenrm 2\teni dmatrixmemcpy\tenr
m (\teni mxGetPr\tenrm (\teni plhs\tenrm [0])\teni ; data; nrBytes\tenrm ); \te
ni free\tenrm (\teni data\tenrm ); \teni if\tenrm (\teni nlhs >\tenrm =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm d
.\tenrm i
.\tenrm m
.\tenrm s
.etc.


Overfull \hbox (1344.65811pt too wide) in paragraph at lines 824--832
\tenrm 2)[]\teni elseif\tenrm (!\teni strcmp\tenrm ("\teni getAudioFrame\tenrm 
"\teni ; cmd\tenrm ))[]$ |

\hbox(7.5+2.5)x469.75499
.\tenrm 2
.\tenrm )
.\hbox(7.5+2.5)x355.71992
..\teni p
..\teni l
..\kern0.19678
..\teni h
..\teni s
..etc.
.\teni e
.\teni l
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.835 		uint8_
              t* data;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.841 ... message(FFG.getAudioFrame(id, frameNr, &
                                                  data, &nrBytes, &time));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.841 ...e(FFG.getAudioFrame(id, frameNr, &data, &
                                                  nrBytes, &time));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.841 ...udioFrame(id, frameNr, &data, &nrBytes, &
                                                  time));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.842 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (44.77382pt too wide) in paragraph at lines 833--842
[]\tenrm unsigned int id = (unsi-gned int)mxGetScalar(prhs[1]); unsi-gned int f
ra-meNr = (unsi-gned int)mxGetScalar(prhs[2]);|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm u
.\tenrm n
.\tenrm s
.\tenrm i
.etc.

! Misplaced alignment tab character &.
l.847 		FFG.getAudioInfo(id, &
                              nrChannels, &rate, &bits, &nrFramesCaptured, &...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.847 		FFG.getAudioInfo(id, &nrChannels, &
                                           rate, &bits, &nrFramesCaptured, &...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.847 		FFG.getAudioInfo(id, &nrChannels, &rate, &
                                                  bits, &nrFramesCaptured, &...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.847 ...udioInfo(id, &nrChannels, &rate, &bits, &
                                                  nrFramesCaptured, &nrFrame...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.847 ...nnels, &rate, &bits, &nrFramesCaptured, &
                                                  nrFramesTotal, &subtype, &...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.847 ...its, &nrFramesCaptured, &nrFramesTotal, &
                                                  subtype, &totalDuration);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.847 ...amesCaptured, &nrFramesTotal, &subtype, &
                                                  totalDuration);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


Overfull \hbox (39.8433pt too wide) in paragraph at lines 845--848
[]\tenrm int nrChan-nels,bits,nrFramesCaptured,nrFramesTotal,subtype; do-uble r
ate, to-tal-Du-ra-tion; FFG.getAudioInfo(id,|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm n
.\kern-0.27779
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.854 				mxClass = mxUINT8_
                            CLASS;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.856 			}
          
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.867 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.867 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (219.36726pt too wide) in paragraph at lines 849--867
[]\tenrm switch (bits)  case 8:  dims[0] = nrBy-tes; mxC-lass = mxUINT8$[]\teni
 LASS\tenrm ; \teni break\tenrm ; \teni case\tenrm 16 : []\teni case\tenrm 24 :
|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm w
.\tenrm i
.\tenrm t
.etc.

! Misplaced alignment tab character &.
l.871 					tmpdata[i] = (((0x80&
                                data[i*3+2])?-1:0)&0xFF000000) | ((data[i*3+...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.871 ...	tmpdata[i] = (((0x80&data[i*3+2])?-1:0)&
                                                  0xFF000000) | ((data[i*3+2...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


Overfull \hbox (106.68973pt too wide) in paragraph at lines 868--873
[]\tenrm //I don't know how 24bit float data is or-ga-ni-zed... for (i=0;i<nrBy
tes/3;i++)  tmp-data[i] = (((0x80data[i*3+2])?-1:0)0xFF000000)|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm /
.\tenrm I
.\glue 3.33333 plus 1.66498 minus 1.11221
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.875 				data = (uint8_
                        t*)tmpdata;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.876 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.877 				mxClass = mxINT32_
                            CLASS;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.881 			}
          
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.894 		}
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.895 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (883.8634pt too wide) in paragraph at lines 877--895
[]\tenrm mxClass = mxINT32$[]\teni LASS\tenrm ; \teni dims\tenrm [0] = \teni nr
Bytes=\tenrm 3; \teni nrBytes \tenrm = \teni nrBytes=\tenrm 3 \tensy ^^C \tenrm
 4; \teni break\tenrm ; \teni case\tenrm 32 : []\teni default \tenrm :|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm m
.\tenrm x
.\tenrm C
.\tenrm l
.etc.


Overfull \hbox (95.42676pt too wide) in paragraph at lines 896--908
[]\tenrm plhs[0] = mxCre-ate-Nu-me-ri-cAr-ray(2, dims, mxC-lass, mxREAL); // em
pty 2d ma-trix memcpy(mxGetPr(plhs[0]),data,nrBytes);|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm p
.\tenrm l
.\tenrm h
.\tenrm s
.etc.


Overfull \hbox (3.70435pt too wide) in paragraph at lines 896--908
\tenrm int[nrFrames]; if (!fra-meNrs) me-xEr-rMsg-Txt("setFrames: out of me-mor
y"); do-uble* data = mxGetPr(prhs[1]);|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm i
.\tenrm n
.\kern-0.27779
.\tenrm t
.\tenrm [
.etc.

[5]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.918 ...(prhs[1]) || mxIsClass(prhs[1],"function_
                                                  handle"))) mexErrMsgTxt("s...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.920 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (10.37099pt too wide) in paragraph at lines 916--920
[]\tenrm FFG.setTime(mxGetScalar(prhs[1]), mxGet-Sca-lar(prhs[2]));  else if (!
strcmp("setMatlabCommand",cmd))|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm F
.\tenrm F
.\kern-0.27779
.\tenrm G
.etc.


Overfull \hbox (56.833pt too wide) in paragraph at lines 916--920
\tenrm if (nrhs < 2 || !(mxI-sChar(prhs[1]) || mxIsClass(prhs[1],"function$[]\t
eni andle\tenrm ")))\teni mexErrMsgTxt\tenrm ("\teni setMatlabCommand \tenrm :|


\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.\tenrm n
.etc.


Overfull \hbox (20.34885pt too wide) in paragraph at lines 916--920
\teni thecommandmustbepassedasastringorfunctionhandle\tenrm "); \teni if\tenrm 
(\teni nlhs > \tenrm 0)\teni mexErrMsgTxt\tenrm ("\teni setMatlabCommand \tenrm
 :|

\hbox(7.5+2.5)x469.75499
.\teni t
.\teni h
.\teni e
.\teni c
.\teni o
.etc.


Overfull \hbox (173.71872pt too wide) in paragraph at lines 926--934
[]\tenrm if (str-len(matlabCommand)==0)  FFG.setMatlabCommand(NULL); free(matla
bCommand);  else FFG.setMatlabCommand(matlabCommand);|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! You can't use `macro parameter character #' in horizontal mode.
l.940 #
       endif
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


Overfull \hbox (31.1487pt too wide) in paragraph at lines 935--941
[]\tenrm else if (!strcmp("cleanUp",cmd))  if (nlhs > 0) me-xEr-rMsg-Txt("clean
Up: there are no out-puts"); FFG.cleanUp();|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm e
.\tenrm l
.\tenrm s
.\tenrm e
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.942 #
       ifdef TEST_FFGRAB
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.942 #ifdef TEST_
                  FFGRAB
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.950 	FFG.getCaptureInfo(&
                           nrVideo, &nrAudio);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.950 	FFG.getCaptureInfo(&nrVideo, &
                                     nrAudio);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.951 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.951 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (469.21924pt too wide) in paragraph at lines 942--951
[]\tenrm ifdef TEST$[]\teni FGRABintmain\tenrm (\teni intargc; char \tensy ^^C 
^^C\teni argv\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\tenrm d
.\tenrm e
.etc.

! You can't use `macro parameter character #' in horizontal mode.
l.954 #
       endif
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

)
! Emergency stop.
<*> FFGrab.cpp MexDDGrab.cpp
                            
*** (job aborted, no legal \end found)

Output written on FFGrab.dvi (5 pages, 36484 bytes).
